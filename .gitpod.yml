tasks:
  - name: aws-sam
    init: |
      cd /workspace
      wget https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip
      unzip aws-sam-cli-linux-x86_64.zip -d sam-installation
      sudo ./sam-installation/install
      cd $THEIA_WORKSPACE_ROOT
  - name: cfn
    init: |
      bundle update --bundler
      pip install cfn-lint
      cargo install cfn-guard
      gem install cfn-toml
  - name: aws-s3-website-sync
    init: |
      cd /workspace
      gem install aws_s3_website_sync dotenv
  - name: aws-cli
    env:
      AWS_CLI_AUTO_PROMPT: on-partial
    before: |
      cd /workspace
      curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      unzip awscliv2.zip
      sudo ./aws/install
      bash $THEIA_WORKSPACE_ROOT/bin/ecr/login
  - name: postgres
    before: |
      curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc|sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg
      echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" |sudo tee  /etc/apt/sources.list.d/pgdg.list
      sudo apt update
      sudo apt install -y postgresql-client-13 libpq-dev
    command: |
      export ENVIRONMENT_IP=$(curl ifconfig.me)
      source  "$THEIA_WORKSPACE_ROOT/bin/rds/update-sg-rule"
  - name: react-js
    command: |
      ruby $THEIA_WORKSPACE_ROOT/bin/frontend/generate_env
      cd frontend-react-js
      npm i
  - name: flask
    command: |
      ruby $THEIA_WORKSPACE_ROOT/bin/backend/generate_env
      cd backend-flask
      pip install -r requirements.txt
  - name: fargate
    before: |
      curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
      sudo dpkg -i session-manager-plugin.deb
  - name: thumbing-serverless-cdk
    before: |
      npm install aws-cdk -g
    command: |
      cd thumbing-serverless-cdk
      cp .env.example .env
      npm i
  - name: process-images
    before: |
      cd aws/lambdas/process-images
      # source "$THEIA_WORKSPACE_ROOT/bin/avatar/sharp"
vscode:
  extensions:
    - 42Crunch.vscode-openapi
    - cweijan.vscode-postgresql-client2

ports:
  - name: frontend
    port: 3000
    visibility: public
  - name: backend
    port: 4567
    visibility: public
  - name: xray-daemon
    port: 2000
    visibility: public
  - name: express node
    port: 8080
    visibility: public