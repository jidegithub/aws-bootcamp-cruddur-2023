admin:
  address:
    socket_address: { address: 0.0.0.0, port_value: 8081 }

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 0.0.0.0, port_value: 8080 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              cors:
                allow_origin_string_match:
                - safe_regex:
                    regex: ".*"
                allow_methods: GET, PUT, POST, DELETE, OPTIONS
                allow_headers: "*"
                expose_headers: "Authorization, content-length, content-type"
              routes:
              - match: { prefix: "/api" }
                route: { cluster: backend-flask }
                typed_per_filter_config:
                  envoy.filters.http.cors:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
                    allow_origin_string_match:
                    - safe_regex:
                        regex: ".*"
                    allow_methods: GET, PUT, POST, DELETE, OPTIONS
                    allow_headers: "*"
                    expose_headers: "Authorization, content-length, content-type"
          http_filters:
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          - name: envoy.filters.http.jwt_authn
            typed_config:
              "@type": "type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication"
              providers:
                cognito_provider:
                  clock_skew_seconds: 600
                  issuer: "https://cognito-idp.us-east-1.amazonaws.com/us-east-1_FzCLtlpCB"
                  remote_jwks:
                    http_uri:
                      uri: "https://cognito-idp.us-east-1.amazonaws.com/us-east-1_FzCLtlpCB/.well-known/jwks.json"
                      cluster: jwks-cluster
                      timeout: 5s

                  forward: true
              rules:
                - match:
                    prefix: "/api"
                  requires:
                    provider_name: cognito_provider
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
  - name: backend-flask
    connect_timeout: 0.25s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: backend-flask
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: backend-flask
                port_value: 4567

  - name: jwks-cluster
    connect_timeout: 0.25s
    type: logical_dns
    dns_lookup_family: V4_ONLY
    http2_protocol_options: {}
    lb_policy: round_robin
    load_assignment:
      cluster_name: jwks-cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: cognito-idp.us-east-1.amazonaws.com
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: cognito-idp.us-east-1.amazonaws.com
        common_tls_context: 
          validation_context:
            # match_subject_alt_names:
            # - exact: "*.*"
            trusted_ca:
              filename:  /etc/ssl/certs/ca-certificates.crt
  # - name: jwks-cluster
  #     connect_timeout: 0.25s
  #     type: STRICT_DNS
  #     lb_policy: ROUND_ROBIN
  #     load_assignment:
  #       cluster_name: jwks_cluster
  #       endpoints:
  #       - lb_endpoints:
  #         - endpoint:
  #             address:
  #               socket_address:
  #                 address: cognito-idp.us-east-1.amazonaws.com
  #                 port_value: 443
  #       transport_socket:
  #         name: envoy.transport_sockets.tls
  #         typed_config:
  #           "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext"
  #           common_tls_context:
  #             validation_context:
  #               trusted_ca:
  #                 filename: /etc/ssl/certs/ca-certificates.crt
  #   # - name: ext_authz_cluster
  #   #   connect_timeout: 1s
  #   #   type: STRICT_DNS
  #   #   lb_policy: ROUND_ROBIN
  #   #   load_assignment:
  #   #     cluster_name: ext_authz_cluster
  #   #     endpoints:
  #   #     - lb_endpoints:
  #   #       - endpoint:
  #   #           address:
  #   #             socket_address:
  #   #               address: backend-flask
  #   #               port_value: 4567