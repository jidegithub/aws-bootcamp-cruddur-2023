version: "3.8"
services:
  backend-flask:
    environment:
      FRONTEND_URL: "${FRONTEND_URL}"
      BACKEND_URL: "${BACKEND_URL}"
      OTEL_EXPORTER_OTLP_ENDPOINT: "https://api.honeycomb.io"
      OTEL_EXPORTER_OTLP_HEADERS: "x-honeycomb-team=${HONEYCOMB_API_KEY_BACKEND}"
      OTEL_SERVICE_NAME: "cruddur-backend-flask"
      ROLLBAR_ACCESS_TOKEN: "${ROLLBAR_ACCESS_TOKEN}"
      AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION}"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_XRAY_URL: "*4567-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}*"
      # AWS_DYNAMODB_ENDPOINT: "http://dynamodb-local:8000"
      AWS_XRAY_DAEMON_ADDRESS: "xray-daemon:2000"
      AWS_COGNITO_USER_POOL_ID: "${AWS_COGNITO_USER_POOL_ID}"
      AWS_COGNITO_USER_POOL_CLIENT_ID: "${AWS_COGNITO_USER_POOL_CLIENT_ID}"
      CONNECTION_URL: "${CONNECTION_URL_DB}"
      CONNECTION_URL_LOCAL: "${CONNECTION_URL_LOCAL}"
    build: ./backend-flask
    ports:
      - "4567:4567"
    healthcheck:
      test: curl --fail http://localhost:4567 || exit 1
      interval: 60s
      retries: 3
      start_period: 20s
      timeout: 10s
    volumes:
      - ./backend-flask:/backend-flask
  frontend-react-js:
    environment:
      REACT_APP_BACKEND_URL: "${REACT_APP_BACKEND_URL}"
      REACT_APP_AWS_USER_POOL_ID: "${REACT_APP_AWS_USER_POOL_ID}"
      REACT_APP_AWS_PROJECT_REGION: "${AWS_DEFAULT_REGION}"
      REACT_APP_CLIENT_ID: "${REACT_APP_CLIENT_ID}"
      REACT_APP_AWS_COGNITO_REGION: "${AWS_DEFAULT_REGION}"
    build: 
      context: ./frontend-react-js
      target: build
    ports:
      - "3000:3000"
    volumes:
      - ./frontend-react-js:/frontend-react-js
  dynamodb-local:
    user: root
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - '5432:5432'
    volumes: 
      - db:/var/lib/postgresql/data
  xray-daemon:
    image: "amazon/aws-xray-daemon"
    environment:
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_REGION: "${AWS_DEFAULT_REGION}"
    command:
      - "xray -o -b xray-daemon:2000"
    ports:
      - 2000:2000/udp
volumes:
  db:
    driver: local
  

# the name flag is a hack to change the default prepend folder
# name when outputting the image names
networks: 
  internal-network:
    driver: bridge
    name: cruddur